services:
  # DATABASES, ADMIN VIEWERS AND STUFF

  mysql1:
    image: mysql:8.0
    container_name: library-db
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=pwd
      - MYSQL_DATABASE=library-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql1:/var/lib/mysql1
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: PhpMyAdmin
    links:
      - mysql1
    restart: always
    ports:
      - 5013:80
    environment:
      - PMA_ARBITRARY=1

  postgres1:
    image: postgres:latest
    hostname: postgres1
    container_name: postgres1
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=membership-db
      - PGUSER=membership-db
      - POSTGRES_PASSWORD=pwd
    volumes:
      - ./data/postgres1:/var/lib/postgresql
      - ./membership-service/data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: "pg_isready -h postgres1"
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: PostgresAdmin
    restart: always
    ports:
      - 9000:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=8Y2o6@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres1

  # API GATEWAY

  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: always
    depends_on:
      - author-service
      - membership-service
      - employee-service
    privileged: true

  # SERVICES

  membership-service:
    build:
      context: membership-service
      dockerfile: Dockerfile
    container_name: membership-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - logs:/app/logs
    restart: always
    depends_on:
      postgres1:
        condition: service_healthy
    privileged: true

  author-service:
    build:
      context: author-service
      dockerfile: Dockerfile
    container_name: author-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - logs:/app/logs
    restart: always
    depends_on:
      mysql1:
        condition: service_healthy
    privileged: true

  employee-service:
    build:
      context: employee-service
      dockerfile: Dockerfile
    container_name: employee-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - logs:/app/logs
    restart: always
    depends_on:
      mysql1:
        condition: service_healthy
    privileged: true

volumes:
  logs: